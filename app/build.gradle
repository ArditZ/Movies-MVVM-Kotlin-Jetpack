apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.android.movieapp"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def localProperties = new Properties()
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
        buildConfigField("String", "API_KEY", localProperties['API_KEY'])
        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "BASE_IMAGE_URL", "\"https://image.tmdb.org/t/p/original/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    sourceSets {
        androidTest.java.srcDirs += "src/sharedTest/java"
        test.java.srcDirs += "src/sharedTest/java"
    }
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Hilt
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    implementation "com.google.dagger:hilt-android:$hiltVersion"

    // Retrofit / OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    testImplementation "junit:junit:$junit"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "com.google.truth:truth:$googleTruth"
    testImplementation "androidx.test:core-ktx:$androidXTestVersion"
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"

    androidTestImplementation "androidx.test:runner:$androidXTestVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "com.google.truth:truth:$googleTruth"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
}